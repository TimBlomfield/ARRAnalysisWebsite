// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CUSTOMER
  USER
}

model RegistrationLink {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  email     String   @unique
  role      Role
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Administrator {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  id_UserData Int      @unique
  data        UserData @relation(fields: [id_UserData], references: [id])
}

model Customer {
  id                Int      @id @default(autoincrement())
  id_stripeCustomer String   @unique
  users             User[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  id_UserData Int      @unique
  data        UserData @relation(fields: [id_UserData], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  id_UserData Int      @unique
  data        UserData @relation(fields: [id_UserData], references: [id])
  id_Customer Int
  customer    Customer @relation(fields: [id_Customer], references: [id])
}

model UserData {
  id             Int      @id @default(autoincrement())
  firstName      String   @default("")
  lastName       String   @default("")
  phone          String   @default("")
  company        String   @default("")
  email          String   @unique
  hashedPassword String
  jobTitle       String   @default("")
  address        String   @default("")
  street1        String   @default("")
  street2        String   @default("")
  street3        String   @default("")
  city           String   @default("")
  state          String   @default("")
  postalCode     String   @default("")
  country        String   @default("")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Optional relations
  admin    Administrator?
  customer Customer?
  user     User?
}

model PricingModel {
  id Int @id @default(autoincrement())

  name           String
  description    String
  startDate      DateTime
  endDate        DateTime
  monthly_tier01 Int
  monthly_tier02 Int
  monthly_tier03 Int
  yearly_tier01  Int
  yearly_tier02  Int
  yearly_tier03  Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Note: a PricingModel can be contained in another PricingModel. For example, the current PricingModel can contain a Christmas discount
  // PricingModel that starts on 15. December and ends on 1. January, all within the start/end date of the current PricingModel.
  // The active PricingModel is determined by quering all PricingModels where current date is between startDate and endDate and
  // endDate-startDate is smallest.
  // Prices are in USD cents
}
