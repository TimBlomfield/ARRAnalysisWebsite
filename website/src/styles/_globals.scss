@use 'sass:map';

$clrHeaderDarkBk: #253551;
$clrHeaderDarkText: white;

$clrHeaderLightBk: white;
$clrHeaderLightText: black;

$clrMenuItemHover: #e6e6e6;
$clrError: #CE2C30;

// Button
$mapLinkButton_Dark: (
  'background':         $clrHeaderDarkBk,
  'text':               $clrHeaderDarkText,
  'background-hover':   #515D74,
  'background-active':  #384D74,
  'border-focus':       $clrHeaderDarkBk,
);

$mapLinkButton_Light: (
  'background':         $clrHeaderLightBk,
  'text':               $clrHeaderDarkBk,
  'background-hover':   lightgray,
  'background-active':  gainsboro,
  'border-focus':       $clrHeaderLightBk,
);

$maxHtmlPageWidth: 1400px;

%noselect {
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
}

@mixin mx-linscale($prop, $maxVal, $minVal, $maxDim, $minDim, $measure: 100vw) {
  $maxValPx: #{$maxVal}px;
  $maxWPx: #{$maxDim}px;
  $minWPx: #{$minDim}px;

  #{$prop}: calc($maxValPx - ($maxWPx - max($measure, $minWPx)) * ($maxVal - $minVal) / ($maxDim - $minDim));
}

@mixin button($map) {
  $clrBackground:         map.get($map, 'background');
  $clrText:               map.get($map, 'text');
  $clrBackground_Hover:   map.get($map, 'background-hover');
  $clrBackground_Active:  map.get($map, 'background-active');
  $clrBorder_Focus:       map.get($map, 'border-focus');

  background-color: transparent;
  touch-action: none;
  text-decoration: none;
  outline: none;
  transition: border 0.2s;

  .text {
    z-index: 1;
    font-size: 16px;
    font-weight: bold;
    color: $clrText;
  }

  .inner {
    z-index: 0;
    position: absolute;
    left: 2px;
    top: 2px;
    right: 2px;
    bottom: 2px;
    border-radius: 32px;
    border: none;
    pointer-events: none;
    touch-action: none;
    background-color: $clrBackground;
    transition: background-color 0.2s;
  }

  &:hover {
    .inner { background-color: $clrBackground_Hover; }
  }

  &:active {
    .inner { background-color: $clrBackground_Active; }
  }

  &:focus-visible {
    border-color: $clrBorder_Focus;
  }
}
